{:alternatives {:annotate validation-benchmark.lib.annotate
                :herbert validation-benchmark.lib.herbert
                :schema validation-benchmark.lib.schema
                :struct validation-benchmark.lib.struct}
 :groups {:associative-collections #{person-map
                                     person-record}
          :atomic-values #{atomic-keyword
                           atomic-number}
          :nil-allowed #{nil-allowed-bool
                         nil-allowed-number
                         nil-allowed-string}
          :sequential-collections #{set-of-keywords
                                    three-tuple
                                    vector-of-two-elements
                                    vector-of-variable-length}
          :custom-predicate #{range-check primes}}
 :inputs {atomic-keyword [[:foo
                           :bar.baz/bat
                           :slartibartfast-the-magrathean]
                          [9.8
                           nope
                           "nah"]]
          atomic-number [[0
                          1
                          -1
                          42
                          0.5
                          -1.41421
                          22/7
                          3.14159265358M
                          36786883868216818816N]
                         [true
                          :foo
                          "bar"
                          baz
                          [1 2 3]]]
          nil-allowed-bool [[true false nil]
                            [1 "x" 'y :z [] #{} {}]]
          nil-allowed-number [[0
                               1
                               -1
                               42
                               0.5
                               -1.41421
                               22/7
                               3.14159265358M
                               36786883868216818816N
                               nil]
                              [true "x" 'y :z [] #{} {}]]
          nil-allowed-string [["Foo"
                               ""
                               nil
                               "SimpleBeanFactoryAwareAspectInstanceFactory"
                               "AbstractSingletonProxyFactoryBean"
                               "TransactionAwarePersistenceManagerFactoryProxy"]
                              [true 'y :z [] #{} {}]]
          person-map [[{:name "Goku"
                        :saiyan? true
                        :age 12}
                       {:name "Bulma"
                        :saiyan? false
                        :age 16}]
                      [{:name "Master Roshi"
                        :saiyan? true}
                       {:name "Krillin"
                        :age 11}]]
          person-record [[#common/person {:name "Goku"
                                          :saiyan? true
                                          :age 12}
                          #common/person {:name "Bulma"
                                          :saiyan? false
                                          :age 16}]
                         [#common/person {:name "Master Roshi"
                                          :saiyan? true}
                          #common/person {:name "Krillin"
                                          :age 11}
                          {:name "Goku"
                           :saiyan? true
                           :age 12}]]
          primes [[7, 29, 53, 83]
                  [4, 16, 25, 99]]
          range-check [[[1.0 1 1]
                        [0.01 1 100]
                        [0.5 5 50]
                        [0.99 9 99]
                        [0.05 5 15]]
                       [[-0.01 1 1]
                        [1.01 1 1]
                        [1.0 11 10]
                        [1.0 5 1000]]]
          set-of-keywords [[#{} #{:foo} #{:foo :bar} #{:a :b :c :d}]
                           [[] {} #{1 2 3}]]
          three-tuple [[[:foo "bar" 3] (:foo "bar" 4)]
                       [[:foo "bar"] [:foo "bar" :baz]]]
          vector-of-two-elements [[[:x :y]
                                   [3 4]
                                   ['foo "bar"]
                                   ["bool" true]]
                                  [[]
                                   [:x]
                                   [:x :y :z]]]
          vector-of-variable-length [[[]
                                      [a]
                                      [a b c]
                                      [0 1 1 2 3 5 8 13 21 34]]
                                     [nil
                                      true
                                      42
                                      (1 2 3)]]}}
